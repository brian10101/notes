to summarize my new findings: I will be using Quart since for my use case where I will be creating a control panel that uses websockets for live updates Quart is better since Quart is a Asynchronous Server Gateway Interface(ASGI) and natively supports websockets unlike frameworks like flask that use Web Server Gateway Interface(WSGI) a older technology and was created before webscokets, and is unable to support websockets it only supports synchronous HTTP 1.x request/ response cycles meaning that it can only send or receive data at once and not do both aka do bidirectional commication or keep a connection open which are must haves for websockets. 

I chose to use tortoise ORM instead of my initial choice, SQLAlchemy, since Quart is an asynchronous framework while SQLAlchemy is synchronous  since it would requires additional configuration and dependencies to integrate with Quart, which could complicate devlopment . So, instead I will use Tortoise ORM since it is natively asynchronous meaning it will easily synergize with Quart with out much configuration.

Since I am now using Quart which is a ASGI framework gunicorn will not work as the server since it is intended for WSGI applications. Instead I will use hypercorn which is built to server ASGI applications like those made with Quart
